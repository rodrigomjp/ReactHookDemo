{"ast":null,"code":"var _jsxFileName = \"/Users/rodrigo/Desktop/CURSO_REACT/01/counterapp/src/component/Clientes.jsx\";\nimport React, { useState, useEffect } from \"react\";\nexport const Clientes = () => {\n  const [cliente, setCliente] = useState({\n    nombre: \"\",\n    edad: 0\n  });\n  const {\n    nombre,\n    edad\n  } = cliente;\n  useEffect(() => {\n    console.log(\"cargando componente\");\n    return () => {\n      console.log(\"eliminando\");\n    };\n  }, []); //arreglo vacio, sòlo se ejecuta al cargar el formulario 1 vez, si no tiene arreglo vacio, se ejecuta siempre\n\n  useEffect(() => {\n    console.log(\"cambio nombre\");\n    return () => {\n      console.log(\"eliminando\");\n    };\n  }, [nombre]); //se puede especificar que se desea observar\n\n  const handleChange = e => {\n    //FORMA 1\n    setCliente({ ...cliente,\n      [e.target.name]: e.target.value\n    }); //FORMA 2\n    // switch (e.target.name) {\n    //   case \"nombre\":\n    //     setCliente({\n    //       ...cliente,\n    //       nombre: e.target.value,\n    //     });\n    //     break;\n    //   case \"edad\":\n    //     setCliente({\n    //       ...cliente,\n    //       edad: e.target.value,\n    //     });\n    //     break;\n    //   default:\n    // }\n    // console.log(e.target.name);\n    // console.log(e.target.value);\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"input\", {\n    name: \"nombre\",\n    value: nombre,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    name: \"edad\",\n    value: edad,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }\n  }));\n};","map":{"version":3,"sources":["/Users/rodrigo/Desktop/CURSO_REACT/01/counterapp/src/component/Clientes.jsx"],"names":["React","useState","useEffect","Clientes","cliente","setCliente","nombre","edad","console","log","handleChange","e","target","name","value"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AAEA,OAAO,MAAMC,QAAQ,GAAG,MAAM;AAC5B,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBJ,QAAQ,CAAC;AACrCK,IAAAA,MAAM,EAAE,EAD6B;AAErCC,IAAAA,IAAI,EAAE;AAF+B,GAAD,CAAtC;AAKA,QAAM;AAAED,IAAAA,MAAF;AAAUC,IAAAA;AAAV,MAAmBH,OAAzB;AAEAF,EAAAA,SAAS,CAAC,MAAM;AACdM,IAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ;AACA,WAAO,MAAM;AACXD,MAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AACD,KAFD;AAGD,GALQ,EAKN,EALM,CAAT,CAR4B,CAapB;;AAERP,EAAAA,SAAS,CAAC,MAAM;AACdM,IAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AACA,WAAO,MAAM;AACXD,MAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AACD,KAFD;AAGD,GALQ,EAKN,CAACH,MAAD,CALM,CAAT,CAf4B,CAoBd;;AAEd,QAAMI,YAAY,GAAIC,CAAD,IAAO;AAC1B;AACAN,IAAAA,UAAU,CAAC,EACT,GAAGD,OADM;AAET,OAACO,CAAC,CAACC,MAAF,CAASC,IAAV,GAAiBF,CAAC,CAACC,MAAF,CAASE;AAFjB,KAAD,CAAV,CAF0B,CAO1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACD,GA1BD;;AA4BA,sBACE,uDACE;AAAO,IAAA,IAAI,EAAC,QAAZ;AAAqB,IAAA,KAAK,EAAER,MAA5B;AAAoC,IAAA,QAAQ,EAAEI,YAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,KAAK,EAAEH,IAA1B;AAAgC,IAAA,QAAQ,EAAEG,YAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF;AAMD,CAxDM","sourcesContent":["import React, { useState, useEffect } from \"react\";\n\nexport const Clientes = () => {\n  const [cliente, setCliente] = useState({\n    nombre: \"\",\n    edad: 0,\n  });\n\n  const { nombre, edad } = cliente;\n\n  useEffect(() => {\n    console.log(\"cargando componente\");\n    return () => {\n      console.log(\"eliminando\");\n    };\n  }, []); //arreglo vacio, sòlo se ejecuta al cargar el formulario 1 vez, si no tiene arreglo vacio, se ejecuta siempre\n\n  useEffect(() => {\n    console.log(\"cambio nombre\");\n    return () => {\n      console.log(\"eliminando\");\n    };\n  }, [nombre]); //se puede especificar que se desea observar\n\n  const handleChange = (e) => {\n    //FORMA 1\n    setCliente({\n      ...cliente,\n      [e.target.name]: e.target.value,\n    });\n\n    //FORMA 2\n    // switch (e.target.name) {\n    //   case \"nombre\":\n    //     setCliente({\n    //       ...cliente,\n    //       nombre: e.target.value,\n    //     });\n    //     break;\n    //   case \"edad\":\n    //     setCliente({\n    //       ...cliente,\n    //       edad: e.target.value,\n    //     });\n    //     break;\n    //   default:\n    // }\n\n    // console.log(e.target.name);\n    // console.log(e.target.value);\n  };\n\n  return (\n    <>\n      <input name=\"nombre\" value={nombre} onChange={handleChange}></input>\n      <input name=\"edad\" value={edad} onChange={handleChange}></input>\n    </>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}