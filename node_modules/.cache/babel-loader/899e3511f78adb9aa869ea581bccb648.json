{"ast":null,"code":"import { useState, useEffect, useRef } from \"react\";\nexport const useFetch = url => {\n  const isMounted = useRef(true);\n  const [state, setState] = useState({\n    data: null,\n    loading: true,\n    error: null\n  }); //   useEffect(() => {\n  //     return () => {\n  //       //se ejecuta cuando se desmonta\n  //       isMounted.current = false; //para indicar que se desmonto\n  //     };\n  //   }, []); //sólo se ejecute una vez al inicio\n\n  useEffect(() => {\n    //para limpiar el state antes de cada llamada\n    setState({\n      data: null,\n      loading: true,\n      error: null\n    });\n    fetch(url).then(resp => resp.json()).then(data => {\n      console.log(JSON.stringify(data));\n\n      if (isMounted.current) {\n        console.log(JSON.stringify(data));\n        setState({\n          data: data,\n          loading: false,\n          error: null\n        });\n      }\n    });\n  }, [url]);\n  return state;\n};","map":{"version":3,"sources":["/Users/rodrigo/Desktop/CURSO_REACT/01/counterapp/src/hooks/useFetch.jsx"],"names":["useState","useEffect","useRef","useFetch","url","isMounted","state","setState","data","loading","error","fetch","then","resp","json","console","log","JSON","stringify","current"],"mappings":"AAAA,SAASA,QAAT,EAAmBC,SAAnB,EAA8BC,MAA9B,QAA4C,OAA5C;AAEA,OAAO,MAAMC,QAAQ,GAAIC,GAAD,IAAS;AAC/B,QAAMC,SAAS,GAAGH,MAAM,CAAC,IAAD,CAAxB;AAEA,QAAM,CAACI,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC;AACjCQ,IAAAA,IAAI,EAAE,IAD2B;AAEjCC,IAAAA,OAAO,EAAE,IAFwB;AAGjCC,IAAAA,KAAK,EAAE;AAH0B,GAAD,CAAlC,CAH+B,CAQ/B;AACA;AACA;AACA;AACA;AACA;;AAEAT,EAAAA,SAAS,CAAC,MAAM;AACd;AACAM,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAE,IADC;AAEPC,MAAAA,OAAO,EAAE,IAFF;AAGPC,MAAAA,KAAK,EAAE;AAHA,KAAD,CAAR;AAKAC,IAAAA,KAAK,CAACP,GAAD,CAAL,CACGQ,IADH,CACSC,IAAD,IAAUA,IAAI,CAACC,IAAL,EADlB,EAEGF,IAFH,CAESJ,IAAD,IAAU;AACdO,MAAAA,OAAO,CAACC,GAAR,CAAYC,IAAI,CAACC,SAAL,CAAeV,IAAf,CAAZ;;AACA,UAAIH,SAAS,CAACc,OAAd,EAAuB;AACrBJ,QAAAA,OAAO,CAACC,GAAR,CAAYC,IAAI,CAACC,SAAL,CAAeV,IAAf,CAAZ;AACAD,QAAAA,QAAQ,CAAC;AACPC,UAAAA,IAAI,EAAEA,IADC;AAEPC,UAAAA,OAAO,EAAE,KAFF;AAGPC,UAAAA,KAAK,EAAE;AAHA,SAAD,CAAR;AAKD;AACF,KAZH;AAaD,GApBQ,EAoBN,CAACN,GAAD,CApBM,CAAT;AAsBA,SAAOE,KAAP;AACD,CAtCM","sourcesContent":["import { useState, useEffect, useRef } from \"react\";\n\nexport const useFetch = (url) => {\n  const isMounted = useRef(true);\n\n  const [state, setState] = useState({\n    data: null,\n    loading: true,\n    error: null,\n  });\n  //   useEffect(() => {\n  //     return () => {\n  //       //se ejecuta cuando se desmonta\n  //       isMounted.current = false; //para indicar que se desmonto\n  //     };\n  //   }, []); //sólo se ejecute una vez al inicio\n\n  useEffect(() => {\n    //para limpiar el state antes de cada llamada\n    setState({\n      data: null,\n      loading: true,\n      error: null,\n    });\n    fetch(url)\n      .then((resp) => resp.json())\n      .then((data) => {\n        console.log(JSON.stringify(data));\n        if (isMounted.current) {\n          console.log(JSON.stringify(data));\n          setState({\n            data: data,\n            loading: false,\n            error: null,\n          });\n        }\n      });\n  }, [url]);\n\n  return state;\n};\n"]},"metadata":{},"sourceType":"module"}