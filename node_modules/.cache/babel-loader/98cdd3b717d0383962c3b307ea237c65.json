{"ast":null,"code":"var _jsxFileName = \"/Users/rodrigo/Desktop/CURSO_REACT/01/counterapp/src/component/Clientes.jsx\";\nimport React, { useState, useEffect } from \"react\";\nimport { useCounter } from \"../hooks/useCounter\";\nimport { useFetch } from \"../hooks/useFetch\";\nexport const Clientes = () => {\n  const [cliente, setCliente] = useState({\n    nombre: \"\",\n    edad: 0\n  });\n  const {\n    nombre,\n    edad\n  } = cliente;\n  const {\n    counter,\n    increment\n  } = useCounter(1);\n  const {\n    loading,\n    data = null\n  } = useFetch(`https://www.breakingbadapi.com/api/quotes/${counter}`);\n  const {\n    author,\n    quote\n  } = !!data && data[0];\n  useEffect(() => {\n    console.log(\"cargando componente\");\n    return () => {\n      console.log(\"eliminando\");\n    };\n  }, []); //arreglo vacio, sòlo se ejecuta al cargar el formulario 1 vez, si no tiene arreglo vacio, se ejecuta siempre\n\n  useEffect(() => {\n    console.log(\"cambio nombre\");\n    return () => {\n      console.log(\"eliminando\");\n    };\n  }, [nombre]); //se puede especificar que se desea observar\n\n  const handleChange = e => {\n    //FORMA 1\n    setCliente({ ...cliente,\n      [e.target.name]: e.target.value\n    }); //FORMA 2\n    // switch (e.target.name) {\n    //   case \"nombre\":\n    //     setCliente({\n    //       ...cliente,\n    //       nombre: e.target.value,\n    //     });\n    //     break;\n    //   case \"edad\":\n    //     setCliente({\n    //       ...cliente,\n    //       edad: e.target.value,\n    //     });\n    //     break;\n    //   default:\n    // }\n    // console.log(e.target.name);\n    // console.log(e.target.value);\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }\n  }, \" contador:\", counter), /*#__PURE__*/React.createElement(\"input\", {\n    name: \"nombre\",\n    value: nombre,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    name: \"edad\",\n    value: edad,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: increment,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }\n  }, \"Sumar\"), loading ? /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }\n  }, \"Cargando...\") : /*#__PURE__*/React.createElement(\"blockquote\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 11\n    }\n  }, quote), /*#__PURE__*/React.createElement(\"footer\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 11\n    }\n  }, author)));\n};","map":{"version":3,"sources":["/Users/rodrigo/Desktop/CURSO_REACT/01/counterapp/src/component/Clientes.jsx"],"names":["React","useState","useEffect","useCounter","useFetch","Clientes","cliente","setCliente","nombre","edad","counter","increment","loading","data","author","quote","console","log","handleChange","e","target","name","value"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,UAAT,QAA2B,qBAA3B;AACA,SAASC,QAAT,QAAyB,mBAAzB;AAEA,OAAO,MAAMC,QAAQ,GAAG,MAAM;AAC5B,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBN,QAAQ,CAAC;AACrCO,IAAAA,MAAM,EAAE,EAD6B;AAErCC,IAAAA,IAAI,EAAE;AAF+B,GAAD,CAAtC;AAKA,QAAM;AAAED,IAAAA,MAAF;AAAUC,IAAAA;AAAV,MAAmBH,OAAzB;AAEA,QAAM;AAAEI,IAAAA,OAAF;AAAWC,IAAAA;AAAX,MAAyBR,UAAU,CAAC,CAAD,CAAzC;AAEA,QAAM;AAAES,IAAAA,OAAF;AAAWC,IAAAA,IAAI,GAAG;AAAlB,MAA2BT,QAAQ,CACtC,6CAA4CM,OAAQ,EADd,CAAzC;AAIA,QAAM;AAAEI,IAAAA,MAAF;AAAUC,IAAAA;AAAV,MAAoB,CAAC,CAACF,IAAF,IAAUA,IAAI,CAAC,CAAD,CAAxC;AAEAX,EAAAA,SAAS,CAAC,MAAM;AACdc,IAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ;AACA,WAAO,MAAM;AACXD,MAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AACD,KAFD;AAGD,GALQ,EAKN,EALM,CAAT,CAhB4B,CAqBpB;;AAERf,EAAAA,SAAS,CAAC,MAAM;AACdc,IAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AACA,WAAO,MAAM;AACXD,MAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AACD,KAFD;AAGD,GALQ,EAKN,CAACT,MAAD,CALM,CAAT,CAvB4B,CA4Bd;;AAEd,QAAMU,YAAY,GAAIC,CAAD,IAAO;AAC1B;AACAZ,IAAAA,UAAU,CAAC,EACT,GAAGD,OADM;AAET,OAACa,CAAC,CAACC,MAAF,CAASC,IAAV,GAAiBF,CAAC,CAACC,MAAF,CAASE;AAFjB,KAAD,CAAV,CAF0B,CAO1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACD,GA1BD;;AA4BA,sBACE,uDACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAeZ,OAAf,CADF,eAEE;AAAO,IAAA,IAAI,EAAC,QAAZ;AAAqB,IAAA,KAAK,EAAEF,MAA5B;AAAoC,IAAA,QAAQ,EAAEU,YAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,eAGE;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,KAAK,EAAET,IAA1B;AAAgC,IAAA,QAAQ,EAAES,YAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,eAIE;AAAQ,IAAA,OAAO,EAAEP,SAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAJF,EAMGC,OAAO,gBACN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADM,gBAGN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIG,KAAJ,CADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAASD,MAAT,CAFF,CATJ,CADF;AAiBD,CA3EM","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useCounter } from \"../hooks/useCounter\";\nimport { useFetch } from \"../hooks/useFetch\";\n\nexport const Clientes = () => {\n  const [cliente, setCliente] = useState({\n    nombre: \"\",\n    edad: 0,\n  });\n\n  const { nombre, edad } = cliente;\n\n  const { counter, increment } = useCounter(1);\n\n  const { loading, data = null } = useFetch(\n    `https://www.breakingbadapi.com/api/quotes/${counter}`\n  );\n\n  const { author, quote } = !!data && data[0];\n\n  useEffect(() => {\n    console.log(\"cargando componente\");\n    return () => {\n      console.log(\"eliminando\");\n    };\n  }, []); //arreglo vacio, sòlo se ejecuta al cargar el formulario 1 vez, si no tiene arreglo vacio, se ejecuta siempre\n\n  useEffect(() => {\n    console.log(\"cambio nombre\");\n    return () => {\n      console.log(\"eliminando\");\n    };\n  }, [nombre]); //se puede especificar que se desea observar\n\n  const handleChange = (e) => {\n    //FORMA 1\n    setCliente({\n      ...cliente,\n      [e.target.name]: e.target.value,\n    });\n\n    //FORMA 2\n    // switch (e.target.name) {\n    //   case \"nombre\":\n    //     setCliente({\n    //       ...cliente,\n    //       nombre: e.target.value,\n    //     });\n    //     break;\n    //   case \"edad\":\n    //     setCliente({\n    //       ...cliente,\n    //       edad: e.target.value,\n    //     });\n    //     break;\n    //   default:\n    // }\n\n    // console.log(e.target.name);\n    // console.log(e.target.value);\n  };\n\n  return (\n    <>\n      <h1> contador:{counter}</h1>\n      <input name=\"nombre\" value={nombre} onChange={handleChange}></input>\n      <input name=\"edad\" value={edad} onChange={handleChange}></input>\n      <button onClick={increment}>Sumar</button>\n\n      {loading ? (\n        <p>Cargando...</p>\n      ) : (\n        <blockquote>\n          <p>{quote}</p>\n          <footer>{author}</footer>\n        </blockquote>\n      )}\n    </>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}